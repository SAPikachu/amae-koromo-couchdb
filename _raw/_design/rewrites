{
  "_id": "_design/rewrites",
  "_rev": "79-4b21869e74af63176f4ed0c84b700da5",
  "rewrites": "function(req2) {\n  \"use strict\";\n  var prefix = req2.path[4];\n  if (prefix !== \"api-test\") {\n  \treturn {\n  \t\tcode: 200,\n  \t\theaders: {\n  \t\t\t\"Cache-Control\": \"max-age=15\",\n  \t\t\t\"Content-Type\": \"application/json; charset=utf-8\"\n  \t\t},\n  \t\tbody: toJSON({\n  \t\t\tmaintenance: \"因数据库出现问题，临时维护中，可能要数日时间恢复 / ただいまメンテナンス中、復旧まで数日が必要かもしれません。\"\n  \t\t})\n  \t};\n  }\n  var basename = req2.path[0];\n  var method = req2.path[5];\n  var params = req2.path.slice(6);\n  if (!method) {\n    return {\n      code: 400,\n      body: toJSON({\n        error: \"bad_request\"\n      })\n    };\n  }\n  var MS_PER_DAY = 1000 * 60 * 60 * 24;\n  var parseTs = function(val) {\n    \"use strict\";\n    var result;\n    try {\n      if (typeof val === \"string\") {\n        if (val.charAt(0) === \"[\") {\n          val = JSON.parse(val);\n        } else if (/^\\d+$/.test(val)) {\n          val = parseInt(val);\n        }\n      }\n      if (typeof val === \"object\" && val.length) {\n        val[1]--; // Fix month\n        val = Date.UTC.apply(Date, val);\n      }\n      if (typeof val === \"number\" && val < (new Date(2000, 0, 1)).getTime()) {\n        val = val * 1000;\n      }\n      result = new Date(val);\n    } catch (e) {\n      log(\"Failed to parse timestamp\");\n      log(e);\n      return null;\n    }\n    if (result.toString().toLowerCase() === \"invalid date\") {\n      return null;\n    }\n    return result;\n  };\n  var dateToKey = function(date) {\n    return [date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours()];\n  };\n  var dateToSecKey = function(date) {\n    return date.getTime() / 1000;\n  };\n  if (req2.query.limit && parseInt(req2.query.limit) > 500) {\n    req2.query.limit = \"500\";\n  }\n  switch (method) {\n    case \"recent_highlight_games\":\n      return {\n        path: \"/../renderers/_list/highlight_games/highlight_games/highlight_games\",\n        query: {\n          \"limit\": req2.query.limit || \"100\",\n          \"skip\": req2.query.skip || \"0\",\n          \"include_docs\": \"true\",\n          \"maxage\": \"300\",\n          \"reduce\": \"false\",\n          \"descending\": \"true\",\n          \"stale\": \"update_after\"\n        }\n      };\n      break;\n    case \"fan_stats\":\n      return {\n        path: \"/../renderers/_list/fan_stats/fan_stats/fan_stats\",\n        query: ({\n          \"group_level\": \"2\",\n          \"maxage\": \"3600\",\n          \"stale\": \"update_after\",\n        })\n      };\n      break;\n    case \"global_statistics\":\n      return {\n        query: {\n          maxage: \"3600\",\n        },\n        path: \"/../../../\" + basename + \"_aggregates/_design/renderers/_show/global_statistics/global_statistics\",\n      };\n      break;\n    case \"career_ranking\":\n      var type = params[0];\n      if (!type) {\n        return {\n          code: 400,\n          body: toJSON({\n            error: \"no_param\"\n          })\n        };\n      }\n      return {\n        path: \"/../../../\" + basename + \"_aggregates/_design/renderers/_show/career_ranking/career_ranking_\" + type,\n        query: {\n          mode: req2.query.mode || \"\"\n        }\n      };\n      break;\n    case \"rank_rate_by_seat\":\n      return {\n        query: {\n          maxage: \"3600\",\n          group: \"true\"\n        },\n        path: \"/../renderers/_list/rank_rate_by_seat/rank_rate_by_seat/rank_rate_by_seat\"\n      };\n      break;\n    case \"player_delta_ranking\":\n      var range = params[0];\n      if (range !== \"1w\" && range !== \"4w\") {\n        return {\n          code: 400,\n          body: toJSON({\n            error: \"invalid_param\"\n          })\n        };\n      }\n      return {\n        path: \"/../../../\" + basename + \"_aggregates/_design/renderers/_show/generic_data/player_delta_ranking_\" + range\n      };\n      break;\n    case \"search_player\":\n      var prefix = params[0];\n      if (!prefix) {\n        return {\n          code: 400,\n          body: toJSON({\n            error: \"no_param\"\n          })\n        };\n      }\n      return {\n        path: \"/../renderers/_list/search_player/nicknames/nicknames\",\n        query: {\n          \"limit\": req2.query.limit || \"20\",\n          \"startkey\": toJSON([prefix]),\n          \"endkey\": toJSON([prefix + \"\\uffff\"]),\n          \"group_level\": \"2\",\n          \"stale\": \"update_after\"\n        }\n      };\n      break;\n    case \"player_records\":\n    case \"player_stats\":\n    case \"player_extended_stats\":\n      var id = parseInt(params[0]);\n      if (!id) {\n        return {\n          code: 400,\n          body: toJSON({\n            error: \"invalid_id\"\n          })\n        };\n      }\n      var startDate = parseTs(params[1] || \"0\");\n      var endDate = params[2] ? parseTs(params[2]) : null;\n      var key = [id];\n      var view = \"player_stats_2\";\n      if (req2.query.mode) {\n        var modeId = parseInt(req2.query.mode);\n        if (!modeId) {\n          return {\n            code: 400,\n            body: toJSON({\n              error: \"invalid_mode_id\"\n            })\n          };\n        }\n        key.push(modeId);\n      } else {\n        key.push(0);\n      }\n      if (method === \"player_records\") {\n        return {\n          path: \"/../renderers/_list/result_from_doc/\" + view + \"/player_stats\",\n          query: {\n            \"limit\": req2.query.limit || \"100\",\n            \"skip\": req2.query.skip || \"0\",\n            \"reduce\": \"false\",\n            \"include_docs\": \"true\",\n            \"startkey\": toJSON(key.concat([dateToSecKey(startDate)])),\n            \"endkey\": toJSON(key.concat([endDate ? dateToSecKey(endDate) : {}])),\n            \"stale\": \"update_after\"\n          }\n        };\n      }\n      if (method === \"player_extended_stats\") {\n        return {\n          path: \"/../renderers/_list/player_extended_stats/player_extended_stats/player_stats\",\n          query: ({\n            \"group_level\": key.length.toString(),\n            \"startkey\": toJSON(key.concat([dateToSecKey(startDate)])),\n            \"endkey\": toJSON(key.concat([endDate ? dateToSecKey(endDate) : {}])),\n            \"stale\": \"update_after\"\n          })\n        };\n      }\n      return {\n        path: \"/../renderers/_list/player_stats/\" + view + \"/player_stats\",\n        query: ({\n          \"group_level\": key.length.toString(),\n          \"startkey\": toJSON(key.concat([dateToSecKey(startDate)])),\n          \"endkey\": toJSON(key.concat([endDate ? dateToSecKey(endDate) : {}])),\n          \"stale\": \"update_after\"\n        })\n      };\n      break;\n    case \"games\":\n    case \"count\":\n      var startTs = parseTs(params[0]);\n      if (!startTs) {\n        return {\n          code: 400,\n          body: toJSON({\n            error: \"invalid_start_time\"\n          })\n        };\n      }\n      var endTs = params[1] ? parseTs(params[1]) : new Date(startTs.getTime() + MS_PER_DAY);\n      if (!endTs) {\n        return {\n          code: 400,\n          body: toJSON({\n            error: \"invalid_end_time\"\n          })\n        };\n      }\n      var cacheMaxAge = (endTs.getTime() < (new Date()).getTime() - MS_PER_DAY / 2) ? 86400 : 60;\n      if (method === \"count\") {\n        return {\n          path: \"/../renderers/_list/single_value/default/by_time\",\n          query: {\n            \"startkey\": toJSON(dateToKey(startTs)),\n            \"endkey\": toJSON(dateToKey(endTs)),\n            \"maxage\": cacheMaxAge.toString(),\n            \"stale\": \"update_after\",\n            \"default\": '{\"count\":0}'\n          }\n        };\n      }\n      return {\n        path: \"/../renderers/_list/result/default/by_time\",\n        query: {\n          \"limit\": req2.query.limit || \"100\",\n          \"skip\": req2.query.skip || \"0\",\n          \"startkey\": toJSON(dateToKey(startTs)),\n          \"endkey\": toJSON(dateToKey(endTs)),\n          \"maxage\": (cacheMaxAge * 15).toString(),\n          \"reduce\": \"false\",\n          \"stale\": \"update_after\"\n        }\n      };\n      break;\n  }\n  return {\n    code: 404,\n    body: toJSON({\n      error: \"unknown_method\"\n    })\n  };\n}"
}