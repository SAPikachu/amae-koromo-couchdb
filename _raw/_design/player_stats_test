{
  "_id": "_design/player_stats_test",
  "_rev": "10-d0297b54a2bce13934cbacc852377264",
  "views": {
    "player_stats": {
      "map": "function(doc) {\n  if (!doc.uuid) {\n    return;\n  }\n  var players = {};\n  doc.accounts.forEach(function(x) {\n    players[x.seat] = {\n      player: x\n    };\n  });\n  doc.result.players.forEach(function(x) {\n    players[x.seat].result = x;\n  });\n  var playerList = Object.keys(players).map(function(x) {\n    return players[x];\n  });\n  playerList.sort(function(a, b) {\n    return b.result.total_point - a.result.total_point;\n  });\n  playerList.forEach(function(x, index) {\n    var level = x.player[playerList.length > 3 ? \"level\" : \"level3\"];\n    var data = {\n      rank: index + 1,\n      nickname: x.player.nickname,\n      level: [level.id, level.score, x.result.grading_score],\n      score: x.result.part_point_1\n    };\n    emit([x.player.account_id, 0, doc.start_time], data);\n    emit([x.player.account_id, doc.config.meta.mode_id, doc.start_time], data);\n  });\n}",
      "reduce": "function(keys, values, rereduce) {\n  var result = {\n    accum: [0, 0, 0, 0, 0],\n    score_accum: [0, 0, 0, 0],\n    nickname: \"\",\n    level: undefined,\n    max_level: undefined,\n    latest_timestamp: 0\n  };\n  var getMaxLevel = function(level) {\n    var maxLevel = (result.max_level || level).slice(0);\n    if (maxLevel[0] !== level[0]) {\n      maxLevel = (maxLevel[0] >= level[0]) ? maxLevel : level.slice(0);\n    } else if (level[1] + Math.max(level[2], 0) > maxLevel[1] + Math.max(maxLevel[2], 0)) {\n      maxLevel = level.slice(0);\n    }\n    maxLevel[2] = Math.max(maxLevel[2], 0);\n    return maxLevel;\n  };\n  if (rereduce) {\n    values.forEach(function(x) {\n      if (x.latest_timestamp > result.latest_timestamp) {\n        result.latest_timestamp = x.latest_timestamp;\n        result.nickname = x.nickname;\n        result.level = x.level;\n      }\n      result.max_level = getMaxLevel(x.max_level);\n      x.accum.forEach(function(count, i) {\n        result.accum[i] += count;\n      });\n      x.score_accum.forEach(function(count, i) {\n        result.score_accum[i] += count;\n      });\n    });\n  } else {\n    values.forEach(function(x, index) {\n      var ts = keys[index][0][2];\n      if (ts > result.latest_timestamp) {\n        result.latest_timestamp = ts;\n        result.nickname = x.nickname;\n        result.level = x.level;\n      }\n      result.max_level = getMaxLevel(x.level);\n      result.accum[x.rank - 1]++;\n      result.score_accum[x.rank - 1] += x.scoreã€€ / 100;\n      if (x.score < 0) {\n        result.accum[4]++;\n      }\n    });\n  }\n  return result;\n}"
    }
  }
}