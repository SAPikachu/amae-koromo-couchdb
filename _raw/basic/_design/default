{
  "_id": "_design/default",
  "_rev": "80-295d0cd0d7307b8605b2a36b621dd677",
  "views": {
    "valid_ids": {
      "map": "function (doc) {\n  if (doc.uuid && doc.version >= 2) {\n\t  emit(doc.uuid, null);\n\t}\n}"
    },
    "by_time": {
      "map": "function (doc) {\n\tvar transform = function (raw) {\n\t\treturn {\n\t\t\tmodeId: raw.config.meta.mode_id,\n\t\t\tuuid: raw.uuid,\n\t\t\tstartTime: raw.start_time,\n\t\t\tendTime: raw.end_time,\n\t\t\tplayers: raw.accounts.map(function (account) {\n\t\t\t\treturn {\n\t\t\t\t\taccountId: account.account_id,\n\t\t\t\t\tnickname: account.nickname,\n\t\t\t\t\tlevel: account[raw.accounts.length > 3 ? \"level\" : \"level3\"].id,\n\t\t\t\t\tscore: raw.result.players.filter(function (x) {\n\t\t\t\t\t\treturn x.seat === account.seat;\n\t\t\t\t\t})[0].part_point_1\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\t};\n\tif (doc.uuid) {\n\t\tvar date = new Date(doc.start_time * 1000);\n\t\temit([date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), doc.start_time], transform(doc));\n\t}\n}",
      "reduce": "function (keys, values, rereduce) {\n\tvar result = {};\n  if (rereduce) {\n\t\tresult.count = sum(values.map(function(x) { return x.count || 0; }));\n\t\t// result.last_time = values.map(function(x) { return x.last_time; }).reduce(function(a, b) { return a > b ? a : b; }, 0);\n  } else {\n\t\tresult.count = values.length || 0;\n\t\t// result.last_time = keys.map(function(x) { return x[0][4]; }).reduce(function(a, b) { return a > b ? a : b; }, 0);\n  }\n  return result;\n}"
    }
  }
}